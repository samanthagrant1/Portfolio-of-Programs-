<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.7.0.1 -->
  <assembly>
    <name>UnityEngine.Analytics</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Analytics.Analytics">
      <summary>
        <para>Unity Analytics provides insight into your game users e.g. DAU, MAU.</para>
        <para>Note: The documentation that follows is for usage of Unity Analytics with Unity 5.1 and above. To integrate Unity Analytics with earlier versions of Unity, refer to the documentation at https://analytics.cloud.unity3d.com/docs Specifically, out-of-the-box features include access to user engagement and retention data through Metric Monitor and Data Explorer. Segmentation of players across various user dimensions and characteristics is automatically applied, with more than 20 standard segments available without any additional instrumentation. For more detail around features, refer to the Unity Analytics homepage at http://unity3d.com/unity/analytics.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Analytics.AnalyticsTracker">
      <summary>Automatically create and send analytics events based on a variety of triggers Set event name, parameter names, and automatically use parameter values either from properties of attached Components or from literal values.</summary>
    </member>
    <member name="T:UnityEngine.Analytics.AnalyticsResult">
      <summary>Analytics API result.</summary>
    </member>
    <member name="T:UnityEngine.Analytics.Gender">
      <summary>User Demographics: Gender of a user.</summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String)">
      <summary>
        <para>Custom Events (optional).</para>
        <para>Unity Analytics allows you to track specific events within your game. By configuring a series of Custom Events within your game, you can create your own Funnel Analysis to observe your players' game behavior. Good places to put custom events include: milestones, new levels, scene transitions, etc. In addition to tracking custom events, Unity Analytics also allows you to pass in custom dimensions (dictionary) relating to the event. These custom dimensions are primarily useful to know additional specifications about the user at the time the custom event was reached.</para>
      </summary>
      <param name="customEventName">Name of custom event. Name cannot include the prefix "unity." - This is a reserved keyword.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String)">
      <summary>Custom Events (optional).</summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String,UnityEngine.Vector3)">
      <summary>Custom Events (optional).</summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.FlushEvents">
      <summary>
        <para>Attempts to flush immediately all queued analytics events to the network and filesystem cache if possible (optional).</para>
        <para>If the network is unavailable, events will stay queued for later attempts. This is convenient for testing to check if events are being sent, but should be used rarely in normal operation. Events do get flushed out more efficiently in normal operation on a low-priority worker thread.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserBirthYear(System.Int32)">
      <summary>
        <para>User Demographics (optional).</para>
        <para>Depending on the genre of your project, creating custom segments around gender and age of your users may interest you. Whether you're receiving this information on signup of your project, or from a third-party SDK, eg: Facebook, you can send these demographics to Unity Analytics.</para>
      </summary>
      <param name="birthYear">Birth year of user. Must be 4-digit year format, only.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserGender(UnityEngine.Analytics.Gender)">
      <summary>
        <para>User Demographics (optional).</para>
        <para>Depending on the genre of your project, creating custom segments around gender and age of your users may interest you. Whether you're receiving this information on signup of your project, or from a third-party SDK, eg: Facebook, you can send these demographics to Unity Analytics.</para>
      </summary>
      <param name="gender">Gender of user can be "Female", "Male", or "Unknown".</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserId(System.String)">
      <summary>User Demographics (optional).</summary>
      <param name="userId">User id.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.Transaction(System.String,System.Decimal,System.String)">
      <summary>
        <para>Tracking Monetization (optional).</para>
        <para>Unity Analytics provides a flexible method for tracking monetization events through in-app purchases. This method should be called every time a player triggers a monetization event. The Transaction method requires a price parameter, a currency and an optional Apple iTunes / Google Play receipt string.</para>
      </summary>
      <param name="productId">The id of the purchased item.</param>
      <param name="amount">The price of the item.</param>
      <param name="currency">Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http://en.wikipedia.org/wiki/ISO_4217 for a standardized list of currency abbreviations.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.Transaction(System.String,System.Decimal,System.String,System.String,System.String)">
      <summary>
        <para>Tracking Monetization (optional).</para>
        <para>Unity Analytics provides a flexible method for tracking monetization events through in-app purchases. This method should be called every time a player triggers a monetization event. The Transaction method requires a price parameter, a currency and an optional Apple iTunes / Google Play receipt string.</para>
      </summary>
      <param name="productId">The id of the purchased item.</param>
      <param name="amount">The price of the item.</param>
      <param name="currency">Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http://en.wikipedia.org/wiki/ISO_4217 for a standardized list of currency abbreviations.</param>
      <param name="receiptPurchaseData">Receipt data (iOS) / receipt ID (android) / for in-app purchases to verify purchases with Apple iTunes / Google Play. Use null in the absence of receipts.</param>
      <param name="signature">Android receipt signature. If using native Android use the INAPP_DATA_SIGNATURE string containing the signature of the purchase data that was signed with the private key of the developer. The data signature uses the RSASSA-PKCS1-v1_5 scheme. Pass in null in absence of a signature.</param>
    </member>
    <member name="P:UnityEngine.Analytics.AnalyticsTracker.eventName">
      <summary>Name of the event.</summary>
    </member>
    <member name="M:UnityEngine.Analytics.AnalyticsTracker.TriggerEvent">
      <summary>Trigger the instrumented event.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.Ok">
      <summary>Analytics API result: Success.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.NotInitialized">
      <summary>Analytics API result: Analytics not initialized.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.AnalyticsDisabled">
      <summary>Analytics API result: Analytics is disabled.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.TooManyItems">
      <summary>Analytics API result: Too many parameters.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.SizeLimitReached">
      <summary>Analytics API result: Argument size limit.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.TooManyRequests">
      <summary>Analytics API result: Too many requests.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.InvalidData">
      <summary>Analytics API result: Invalid argument value.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.UnsupportedPlatform">
      <summary>Analytics API result: This platform doesn't support Analytics.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Male">
      <summary>User Demographics: Male Gender of a user.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Female">
      <summary>User Demographics: Female Gender of a user.</summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Unknown">
      <summary>User Demographics: Unknown Gender of a user.</summary>
    </member>
  </members>
</doc>